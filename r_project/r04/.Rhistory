scale = c(3,0.3),
colors = pal)
wordcloud(words = df_word2$wordcounts1,
freq = df_word2$Freq,
min.freq = 2,
max.words = 200,
random.order = F,
rot.per = 0,
scale = c(3,0.3),
colors = pal)
wordcloud(words = df_word2$wordcounts1,
freq = df_word2$Freq,
min.freq = 2,
max.words = 200,
random.order = F,
rot.per = 0,
scale = c(3,0.3),
colors = pal)
wordcloud(words = df_word2$wordcounts1,
freq = df_word2$Freq,
min.freq = 2,
max.words = 200,
random.order = F,
rot.per = 0,
scale = c(3,0.5),
colors = pal)
wordcloud(words = df_word2$wordcounts1,
freq = df_word2$Freq,
min.freq = 1,
max.words = 200,
random.order = F,
rot.per = 0,
scale = c(3,0.5),
colors = pal)
wordcloud(words = df_word2$wordcounts1,
freq = df_word2$Freq,
min.freq = 3,
max.words = 200,
random.order = F,
rot.per = 0,
scale = c(3,0.5),
colors = pal)
wordcloud(words = df_word2$wordcounts1,
freq = df_word2$Freq,
min.freq = 3,
max.words = 200,
random.order = F,
rot.per = 0,
scale = c(4,0.6),
colors = pal)
wordcloud(words = df_word2$wordcounts1,
freq = df_word2$Freq,
min.freq = 3,
max.words = 200,
random.order = F,
rot.per = 1,
scale = c(4,0.6),
colors = pal)
wordcloud(words = df_word2$wordcounts1,
freq = df_word2$Freq,
min.freq = 3,
max.words = 200,
random.order = F,
rot.per = 0.2,
scale = c(4,0.6),
colors = pal)
library(dplyr)
library(multilinguer)
library(rJava)
library(KoNLP)
library(stringr)
library(wordcloud)
library(RColorBrewer)
txt2 <- readLines('economy.txt')
txt3 <- readLines('economy.txt')
txt2 <- readLines('한·핀란드 스타트업 서밋.txt')
noun3 <- extractNoun(txt3)
nouns3 <- extractNoun(txt3)
wordcount3 <- unlist(nouns3)
wordcounts3 <- table(wordcount3)
table(wordcounts3)
df_word3 <- as.data.frame(wordcounts3,stringsAsFactors = F)
df_word3 <- filter(df_word3,nchar(wordcounts3)>=2)
wordcloud(words = df_word3$wordcount3,
freq = df_word3$Freq,
min.freq = 2,
max.words = 300,
random.order = F,
rot.per = 0.3,
scale = c(3,0.5),
colors = pal)
txt3 <- readLines('economy.txt')
nouns3 <- extractNoun(txt3)
wordcount3 <- unlist(nouns3)
wordcounts3 <- table(wordcount3)
table(wordcounts3)
df_word3 <- as.data.frame(wordcounts3,stringsAsFactors = F)
df_word3 <- filter(df_word3,nchar(wordcounts3)>=2)
wordcloud(words = df_word3$wordcount3,
freq = df_word3$Freq,
min.freq = 2,
max.words = 300,
random.order = F,
rot.per = 0.3,
scale = c(3,0.5),
colors = pal)
df_word3 <- filter(df_word3,nchar(wordcounts3)>=2)
wordcloud(words = df_word3$wordcount3,
freq = df_word3$Freq,
min.freq = 2,
max.words = 300,
random.order = F,
rot.per = 0.3,
scale = c(3,0.5),
colors = pal)
df_word3 <- filter(df_word3,nchar(wordcounts3)>=2)
View(df_word3)
txt3 <- readLines('economy.txt')
nouns3 <- extractNoun(txt3)
nouns3
wordcount3 <- unlist(nouns3)
wordcounts3 <- table(wordcount3)
table(wordcounts3)
df_word3 <- as.data.frame(wordcounts3,stringsAsFactors = F)
df_word3 <- filter(df_word3,nchar(wordcounts3)>=2)
wordcloud(words = df_word3$wordcount3,
freq = df_word3$Freq,
min.freq = 2,
max.words = 300,
random.order = F,
rot.per = 0.3,
scale = c(3,0.5),
colors = pal)
wordcloud(words = df_word3$wordcount3,
freq = df_word3$Freq,
min.freq = 3,
max.words = 300,
random.order = F,
rot.per = 0.3,
scale = c(3,0.5),
colors = pal)
df_word3 <- filter(df_word3,nchar(wordcounts3)>=2)
txt3 <- readLines('economy.txt')
nouns3 <- extractNoun(txt3)
nouns3
wordcount3 <- unlist(nouns3)
wordcounts3 <- table(wordcount3)
table(wordcounts3)
df_word3 <- as.data.frame(wordcounts3,stringsAsFactors = F)
wordcloud(words = df_word3$wordcount3,
freq = df_word3$Freq,
min.freq = 3,
max.words = 300,
random.order = F,
rot.per = 0.3,
scale = c(3,0.5),
colors = pal)
wordcloud(words = df_word3$wordcount3,
freq = df_word3$Freq,
min.freq = 5,
max.words = 300,
random.order = F,
rot.per = 0.3,
scale = c(3,0.5),
colors = pal)
df_word3 <- filter(df_word3,nchar(wordcounts3)>=2)
wordcloud(words = df_word3$wordcount3,
freq = df_word3$Freq,
min.freq = 5,
max.words = 300,
random.order = F,
rot.per = 0.3,
scale = c(3,0.5),
colors = pal)
View(df_word2)
txt3 <- readLines('economy.txt')
nouns3 <- extractNoun(txt3)
nouns3
wordcount3 <- unlist(nouns3)
wordcounts3 <- table(wordcount3)
table(wordcounts3)
df_word3 <- as.data.frame(wordcounts3,stringsAsFactors = F)
df_word3 <- filter(df_word3,nchar(wordcount3)>=2)
wordcloud(words = df_word3$wordcount3,
freq = df_word3$Freq,
min.freq = 5,
max.words = 300,
random.order = F,
rot.per = 0.3,
scale = c(3,0.5),
colors = pal)
wordcloud(words = df_word3$wordcount3,
freq = df_word3$Freq,
min.freq = 4,
max.words = 300,
random.order = F,
rot.per = 0.3,
scale = c(3,0.5),
colors = pal)
wordcloud(words = df_word3$wordcount3,
freq = df_word3$Freq,
min.freq = 3,
max.words = 300,
random.order = F,
rot.per = 0.3,
scale = c(3,0.5),
colors = pal)
wordcloud(words = df_word3$wordcount3,
freq = df_word3$Freq,
min.freq = 4,
max.words = 300,
random.order = F,
rot.per = 0.3,
scale = c(4,0.5),
colors = pal)
install.packages("ggiraphExtra")
library(ggiraphExtra)
install.packages('stringi')
install.packages("stringi")
install.packages('devtools')
devtools::install_github("cardiomoon/kormaps2014")
library(kormaps2014)
str(korpop1)
View(korpop1)
str(changeCode(korpop1))
View(changeCode(korpop1))
library(dplyr)
View(changeCode(korpop1))
korpop1 <- rename(korpop1,
pop=총인구_명,
name=행정구역별_읍면동,
)
View(changeCode(korpop1))
head(korpop1)
korpop1 <- changeCode(korpop1)
head(korpop1,10)
ggChoropleth(data = korpop1, x=name, y=pop)
ggChoropleth(data = korpop1,
aes(fill = pop,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
library(ggiraphExtra)
library(kormaps2014)
library(dplyr)
ggChoropleth(data = korpop1,
aes(fill = pop,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
library(ggplot2)
ggChoropleth(data = korpop1,
aes(fill = pop,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
t2)
library(ggiraphExtra)
library(kormaps2014)
library(dplyr)
str(changeCode(korpop1))
View(changeCode(korpop1))
korpop1 <- rename(korpop1,
pop=총인구_명,
name=행정구역별_읍면동,
)
ggChoropleth(data = korpop1,
aes(fill = pop,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
ggChoropleth(data = korpop1,
aes(fill = pop,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
View(changeCode(kormap1))
install.packages("ggiraphExtra")
install.packages("ggiraphExtra")
install.packages('mapproj')
library(mapproj)
ggChoropleth(data = korpop1,
aes(fill = pop,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
y(ggplot2)
library(ggiraphExtra)
library(kormaps2014)
library(dplyr)
library(mapproj)
ggChoropleth(data = korpop1,
aes(fill = pop,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
library(ggplot2)
ggChoropleth(data = korpop1,
aes(fill = pop,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
ggChoropleth(data = korpop1,
aes(fill = pop,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
library(ggplot2)
library(ggiraphExtra)
library(kormaps2014)
library(dplyr)
library(mapproj)
str(changeCode(korpop1))
View(changeCode(korpop1))
korpop1 <- rename(korpop1,
pop=총인구_명,
name=행정구역별_읍면동,
)
View(changeCode(kormap1))
korpop1 <- changeCode(korpop1)
ggChoropleth(data = korpop1,
aes(fill = pop,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
View(changeCode(korpop1))
kormap1 <- changeCode(kormap1)
ggChoropleth(data = korpop1,
aes(fill = pop,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
(ggplot2)
library(ggiraphExtra)
library(kormaps2014)
library(dplyr)
library(mapproj)
korpop1 <- rename(korpop1,
pop=총인구_명,
name=행정구역별_읍면동,
)
View(changeCode(kormap1))
View(changeCode(korpop1))
library(kormaps2014)
View(changeCode(korpop1))
devtools::install_github("cardiomoon/kormaps2014")
library(kormaps2014)
View(changeCode(korpop1))
devtools::install_github("cardiomoon/kormaps2014")
install.packages('devtools')
devtools::install_github("cardiomoon/kormaps2014")
install.packages('stringi')
devtools::install_github("cardiomoon/kormaps2014")
library(ggiraphExtra)
library(kormaps2014)
library(dplyr)
str(changeCode(korpop1))
View(changeCode(korpop1))
View(kormap1)
View(korpop1)
View(korpop1)
View(kormap1)
View(noun3)
devtools::install_github("cardiomoon/kormaps2014")
install.packages('devtools')
devtools::install_github("cardiomoon/kormaps2014")
library(kormaps2014)
korpop1 <- rename(korpop1,
pop=총인구_명,
name=행정구역별_읍면동,
)
View(changeCode(korpop1))
ggChoropleth(data = korpop1, # 지도에 표현할 데이터
aes(fill = pop, # 색깔로 표현할 변수
map_id = code, # 지역 기준 변수
tooltip = name), # 지도 위에 표시할 지역명
map = kormap1, # 지도 데이터
interactive = T) # 인터랙티브
ggChoropleth(data = changeCode(korpop1), # 지도에 표현할 데이터
aes(fill = pop, # 색깔로 표현할 변수
map_id = code, # 지역 기준 변수
tooltip = name), # 지도 위에 표시할 지역명
map = kormap1, # 지도 데이터
interactive = T) # 인터랙티브
ggChoropleth(data = korpop1, # 지도에 표현할 데이터
aes(fill = pop, # 색깔로 표현할 변수
map_id = code, # 지역 기준 변수
tooltip = name), # 지도 위에 표시할 지역명
map = kormap1, # 지도 데이터
interactive = T) # 인터랙티브
aphExtra)
library(kormaps2014)
library(dplyr)
library(ggiraphExtra)
library(kormaps2014)
library(dplyr)
korpop1$name <- iocnv(korpop1$name, 'UTF-8', 'CP949')
library(ggplot2)
install.packages('mapproj')
library(stringi)
library(devtools)
library(mapproj)
korpop1$name <- iocnv(korpop1$name, 'UTF-8', 'CP949')
korpop1$name <- iconv(korpop1$name, 'UTF-8', 'CP949')
ggChoropleth(data = korpop1, # 지도에 표현할 데이터
aes(fill = pop, # 색깔로 표현할 변수
map_id = code, # 지역 기준 변수
tooltip = name), # 지도 위에 표시할 지역명
map = kormap1, # 지도 데이터
interactive = T) # 인터랙티브
korpop1 <- rename(korpop1,
male=남자_명,
female=여자_명명)
korpop1 <- rename(korpop1,
male=남자_명,
female=여자_명)
korpop1 %>%  mutate(mvsf = male-female)
ggChoropleth(data=korpop1,
aes(fill=mvsf,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
View(korpop1)
korpop1 <- korpop1 %>%  mutate(mvsf = male-female)
View(changeCode(korpop1))
ggChoropleth(data=korpop1,
aes(fill=mvsf,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
View(korpop1)
View(korpop1)
View(korpop1)
korpop1 <- rename(korpop1,
localcount = 내국인_계_명,
forecoount = 외국인_계_명명)
korpop1 <- rename(korpop1,
localcount = 내국인_계_명,
forecoount = 외국인_계_명)
korpop1 <- korpop1 %>% mutate(perfor = 100*(localcount+forecount)/forecount)
View(korpop1)
korpop1 <- rename(korpop1, forecount = forecoount)
View(korpop1)
korpop1 <- korpop1 %>% mutate(perfor = 100*(localcount+forecount)/forecount)
korpop1 <- korpop1 %>% mutate(perfor = (localcount+forecount)/forecount)
korpop1 <- korpop1 %>% mutate(perfor = (localcount+forecount)//forecount)
korpop1 <- korpop1 %>% mutate(perfor = (localcount+forecount)%forecount)
korpop1 <- korpop1 %>% mutate(perfor = (localcount+forecount)/forecount)
View(korpop1)
str(korpop1)
df_korpop1 <- as.data.frame(korpop1)
View(df_korpop1)
str(df_korpop1)
df_korpop1 <- rename(df_korpop1,
localcount = 내국인_계_명,
forecount = 외국인_계_명)
str(df_korpop1)
df_korpop1 <- df_korpop1 %>% mutate(perfor = (localcount+forecount)/forecount)
str(df_korpop1)
df_korpop1 <- as.data.frame(korpop1,stringsAsFactors = F)
str(df_korpop1)
df_korpop1 <- subset(df_korpop1,select = -perfor)
str(df_korpop1)
View(korpop1)
df_korpop1 <- subset(df_korpop1,select = -perfor)
View(df_korpop1)
str(df_korpop1)
df_korpop1 <- df_korpop1 %>% mutate(perfor = (localcount+forecount)/forecount)
View(df_korpop1)
df_korpop1 <- subset(df_korpop1,select = -perfor)
View(df_korpop1)
source('E:/cjs/r_project/r04/MapVisualization.R', encoding = 'UTF-8', echo=TRUE)
install.packages("ggiraphExtra")
View(df_korpop1)
df_korpop1 <- df_korpop1 %>% mutate(totalpop = localcount+forecount)
str(df_korpop1)
str(korpop1)
korpop1 <- korpop1 %>% mutate(totalpop = localcount+forecount)
View(korpop1)
library(ggiraphExtra)
library(kormaps2014)
library(dplyr)
library(ggplot2)
library(stringi)
library(devtools)
library(mapproj)
str(changeCode(korpop1))
View(korpop1)
korpop1 <- subset(korpop1,select = -perfor)
korpop1 <- subset(korpop1,select = -totalpop)
str(changeCode(korpop1))
korpop1 <- korpop1 %>% mutate(totalpop = localcount+forecount)
korpop1 <- subset(korpop1,select = -totalpop)
str(korpop1)
Sys.setlocale("LC_ALL","English")
str(korpop1)
View(korpop1)
korpop1 <- korpop1 %>% mutate(totalpop = localcount+forecount)
str(df_korpop1)
